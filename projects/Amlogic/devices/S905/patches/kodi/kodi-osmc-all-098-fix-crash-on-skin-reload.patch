From 1b8052c9dd22a17951998a4092c62e9da4e7e376 Mon Sep 17 00:00:00 2001
From: Sam Nazarko <email@samnazarko.co.uk>
Date: Fri, 4 Aug 2017 21:13:59 +0100
Subject: [PATCH] Fix a crash caused by multiple calls to ReloadSkin() before
 the first one completes

Signed-off-by: Sam Nazarko <email@samnazarko.co.uk>
---
 xbmc/Application.cpp | 11 ++++++++++-
 xbmc/Application.h   |  3 +++
 2 files changed, 13 insertions(+), 1 deletion(-)

diff --git a/xbmc/Application.cpp b/xbmc/Application.cpp
index 5c0af96..57831ef 100644
--- a/xbmc/Application.cpp
+++ b/xbmc/Application.cpp
@@ -1157,6 +1157,11 @@ void CApplication::ReloadSkin(bool confirm/*=false*/)
      return;
   }
 
+  if (m_SkinReloading) {
+    CLog::Log(LOGINFO, "Suppressing skin reload as we are already doing so");
+    return;
+  }
+
   std::string oldSkin = g_SkinInfo->ID();
 
   CGUIMessage msg(GUI_MSG_LOAD_SKIN, -1, CServiceBroker::GetGUI()->GetWindowManager().GetActiveWindow());
@@ -1164,7 +1169,11 @@ void CApplication::ReloadSkin(bool confirm/*=false*/)
 
   const std::shared_ptr<CSettings> settings = CServiceBroker::GetSettingsComponent()->GetSettings();
   std::string newSkin = settings->GetString(CSettings::SETTING_LOOKANDFEEL_SKIN);
-  if (LoadSkin(newSkin))
+  m_SkinReloading = true;
+  bool skinLoaded = LoadSkin(newSkin);
+  m_SkinReloading = false;
+  
+  if (skinLoaded)
   {
     /* The Reset() or SetString() below will cause recursion, so the m_confirmSkinChange boolean is set so as to not prompt the
        user as to whether they want to keep the current skin. */
diff --git a/xbmc/Application.h b/xbmc/Application.h
index 0edd896..8a54e4a 100644
--- a/xbmc/Application.h
+++ b/xbmc/Application.h
@@ -339,6 +339,9 @@ public:
 
   void SetLoggingIn(bool switchingProfiles);
 
+  /*! \Ensure that we only handle one request to reload the skin at once */
+  bool m_SkinReloading;
+
   /*!
    \brief Register an action listener.
    \param listener The listener to register
-- 
2.7.4

